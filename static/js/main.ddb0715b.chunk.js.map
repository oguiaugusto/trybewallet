{"version":3,"sources":["images/logo-trybewallet.svg","images/coin.svg","images/logo-trybewallet-white.svg","actions/index.js","services/getCurrenciesApi.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","pages/Login.jsx","pages/Wallet.jsx","pages/NotFound.jsx","components/Routes.jsx","components/Header.jsx","components/ExpenseForm/Fields.jsx","components/ExpenseForm/index.jsx","components/ExpensesTable.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchCurrenciesAct","dispatch","type","fetch","then","response","json","ok","Promise","resolve","reject","r","curr","catch","err","failRequest","INITIAL_STATE","email","currencies","expenses","editing","editingExpense","isFetching","error","rootReducer","combineReducers","user","state","action","wallet","USDT","expense","map","ex","id","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","emailRegex","Login","props","password","loggedIn","handleChange","bind","logIn","enableBtn","target","name","value","this","setState","saveEmail","match","length","to","inputClassEmail","inputClassPassword","className","src","logoTrybeWallet","alt","htmlFor","data-testid","placeholder","onChange","onKeyDown","key","onClick","disabled","coin","React","Component","connect","saveEmailAct","Wallet","expanded","handleExpand","prev","editingClass","leftColumnClass","expandBtnText","color","height","width","defaultProps","NotFound","Routes","exact","path","component","Header","getTotalExpenses","reduce","acc","parseFloat","currency","exchangeRates","ask","logoTrybewalletWhite","toFixed","Fields","description","method","tag","supportedCurrencies","c","hidden","ExpenseForm","settledFields","getCurrencies","setEditingFields","handleAddExpense","handleSaveEdit","fetchCurrencies","fields","addExpense","saveExpense","newExpense","fieldsObj","Array","isArray","Object","keys","addExpenseAct","saveExpenseAct","ExpensesTable","removeExpense","editExpense","scope","i","split","size","removeExpenseAct","editExpenseAct","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ddb0715b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-trybewallet.2e12587f.svg\";","module.exports = __webpack_public_path__ + \"static/media/coin.a9fe7d52.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-trybewallet-white.fd709601.svg\";","import getCurrenciesApi from '../services/getCurrenciesApi';\n\nexport const SAVE_EMAIL = 'SAVE_EMAIL';\nexport const REQUEST_API = 'REQUEST_API';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const FAIL_REQUEST = 'FAIL_REQUEST';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const SAVE_EXPENSE = 'SAVE_EXPENSE';\n\nexport const saveEmailAct = (email) => ({ type: SAVE_EMAIL, email });\nexport const addExpenseAct = (expense) => ({ type: ADD_EXPENSE, expense });\nexport const removeExpenseAct = (id) => ({ type: REMOVE_EXPENSE, id });\nexport const editExpenseAct = (id) => ({ type: EDIT_EXPENSE, id });\nexport const saveExpenseAct = (id, expense) => ({ type: SAVE_EXPENSE, id, expense });\n\nconst requestApi = () => ({ type: REQUEST_API });\nconst getCurrencies = (curr) => ({ type: GET_CURRENCIES, curr });\nconst failRequest = (err) => ({ type: FAIL_REQUEST, err });\n\nexport const fetchCurrenciesAct = () => (dispatch) => {\n  dispatch(requestApi());\n  return getCurrenciesApi()\n    .then((r) => dispatch(getCurrencies(r)))\n    .catch((err) => dispatch(failRequest(err)));\n};\n","const URL = 'https://economia.awesomeapi.com.br/json/all';\n\nexport default function getCurrenciesApi() {\n  return fetch(URL).then((response) => response\n    .json()\n    .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))));\n}\n","import { SAVE_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nexport default function user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case SAVE_EMAIL:\n    return { ...state, email: action.email };\n  default:\n    return state;\n  }\n}\n","import {\n  REQUEST_API,\n  GET_CURRENCIES,\n  FAIL_REQUEST,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  EDIT_EXPENSE,\n  SAVE_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editing: false,\n  editingExpense: {},\n  isFetching: false,\n  error: '',\n};\n\nexport default function user(state = INITIAL_STATE,\n  action) {\n  switch (action.type) {\n  case REQUEST_API:\n    return { ...state, isFetching: true };\n  case GET_CURRENCIES: {\n    const { curr } = action;\n    delete curr.USDT;\n    return { ...state, currencies: curr, isFetching: false };\n  }\n  case FAIL_REQUEST:\n    return { ...state, error: action.err, isFetching: false };\n  case ADD_EXPENSE: {\n    const expenses = [...state.expenses, action.expense].map((ex, id) => ({ id, ...ex }));\n    return { ...state, expenses };\n  }\n  case REMOVE_EXPENSE: {\n    const expenses = state.expenses\n      .filter(({ id }) => id !== action.id)\n      .map((ex, id) => ({ id, ...ex }));\n    return { ...state, expenses };\n  }\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      editing: true,\n      editingExpense: state.expenses.filter(({ id }) => id === action.id)[0],\n    };\n  case SAVE_EXPENSE:\n    return {\n      ...state,\n      editing: false,\n      editingExpense: {},\n      expenses: state.expenses.map((ex) => (ex.id === action.id ? action.expense : ex)),\n    };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { saveEmailAct } from '../actions';\nimport logoTrybeWallet from '../images/logo-trybewallet.svg';\nimport coin from '../images/coin.svg';\nimport '../style/login-page.css';\n\nconst emailRegex = (\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/igm\n);\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.logIn = this.logIn.bind(this);\n    this.enableBtn = this.enableBtn.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  logIn() {\n    const { props: { saveEmail }, state: { email } } = this;\n    saveEmail(email);\n    this.setState({ loggedIn: true });\n  }\n\n  enableBtn() {\n    const { state: { email, password } } = this;\n    const emailMatch = email.match(emailRegex);\n\n    const MIN_PASSWORD_LENGTH = 6;\n\n    return !(\n      !emailMatch || password.length < MIN_PASSWORD_LENGTH\n    );\n  }\n\n  render() {\n    const { state: { email, password, loggedIn } } = this;\n    const enableBtn = this.enableBtn();\n\n    if (loggedIn) return <Redirect to=\"/carteira\" />;\n\n    const inputClassEmail = email.match(emailRegex)\n      ? 'validated-input' : 'unvalidated-input';\n\n    const MIN_PASSWORD_LENGTH = 6;\n\n    const inputClassPassword = password.length >= MIN_PASSWORD_LENGTH\n      ? 'validated-input' : 'unvalidated-input';\n\n    return (\n      <div className=\"login-page d-flex\">\n        <div\n          className=\"\n            login-container d-flex flex-column align-items-center justify-content-center\n          \"\n        >\n          <img src={ logoTrybeWallet } alt=\"trybewallet logo\" className=\"logo\" />\n          <div className=\"login-form d-flex flex-column\">\n            <p className=\"login-p display-6 text-center mb-4\">Entre para continuar</p>\n            <label htmlFor=\"email\" className=\"form-label\">\n              Digite seu email:\n              <input\n                data-testid=\"email-input\"\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"email@email.com\"\n                className={ `form-control mt-1 ${inputClassEmail}` }\n                value={ email }\n                onChange={ this.handleChange }\n                onKeyDown={ ({ key }) => (\n                  key === 'Enter' && enableBtn ? this.logIn() : null\n                ) }\n              />\n            </label>\n            <label htmlFor=\"password\" className=\"form-label mt-1 mb-4\">\n              Digite sua senha:\n              <input\n                data-testid=\"password-input\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"******\"\n                className={ `form-control mt-1 ${inputClassPassword}` }\n                value={ password }\n                onChange={ this.handleChange }\n                onKeyDown={ ({ key }) => (\n                  key === 'Enter' && enableBtn ? this.logIn() : null\n                ) }\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={ this.logIn }\n              disabled={ !enableBtn }\n            >\n              Entrar\n            </button>\n          </div>\n        </div>\n        <div className=\"coin-image align-items-center justify-content-center\">\n          <img src={ coin } alt=\"coin\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveEmail: (email) => dispatch(saveEmailAct(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  saveEmail: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TailSpin } from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport { Header, ExpenseForm, ExpensesTable } from '../components';\nimport '../style/wallet-page.css';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: true,\n    };\n\n    this.handleExpand = this.handleExpand.bind(this);\n  }\n\n  handleExpand() {\n    this.setState((prev) => ({ expanded: !prev.expanded }));\n  }\n\n  render() {\n    const { props: { isFetching, editing }, state: { expanded } } = this;\n    const editingClass = editing ? 'column-editing' : '';\n\n    const leftColumnClass = expanded ? 'open' : 'close';\n    const expandBtnText = expanded ? 'Min.' : 'Max.';\n\n    return (\n      <div className=\"wallet-page d-flex\">\n        <div\n          className={\n            `wallet-left-column d-flex flex-column align-items-center\n            ${editingClass} ${leftColumnClass}`\n          }\n        >\n          <button\n            type=\"button\"\n            className=\"expand-btn\"\n            onClick={ this.handleExpand }\n          >\n            {expandBtnText}\n          </button>\n          <Header />\n          <div className=\"line\" />\n          <ExpenseForm />\n        </div>\n        <div className=\"right-column d-flex align-items-center justify-content-center\">\n          {isFetching ? (\n            <TailSpin type=\"TailSpin\" color=\"#252525\" height={ 30 } width={ 30 } />\n          ) : null}\n          <ExpensesTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isFetching: state.wallet.isFetching,\n  editing: state.wallet.editing,\n});\n\nexport default connect(mapStateToProps)(Wallet);\n\nWallet.propTypes = {\n  isFetching: PropTypes.bool,\n  editing: PropTypes.bool,\n};\n\nWallet.defaultProps = {\n  isFetching: false,\n  editing: false,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"not-found-page\">\n        <h1>Página não encontrada</h1>\n        <h2>\n          {'Por favor, '}\n          <Link to=\"/\">clique aqui</Link>\n          {' para logar.'}\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Login, Wallet, NotFound } from '../pages';\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n        <Route path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport logoTrybewalletWhite from '../images/logo-trybewallet-white.svg';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTotalExpenses = this.getTotalExpenses.bind(this);\n  }\n\n  getTotalExpenses() {\n    const { props: { expenses } } = this;\n    const totalExpenses = expenses.reduce((acc, ex) => {\n      let { value } = ex;\n      value = parseFloat(value);\n\n      if (ex.currency !== 'BRL') {\n        value *= parseFloat(ex.exchangeRates[ex.currency].ask);\n      }\n\n      return acc + value;\n    }, 0);\n\n    return totalExpenses;\n  }\n\n  render() {\n    const { props: { email } } = this;\n    return (\n      <header className=\"wallet-header d-flex flex-column align-item-center\">\n        <div className=\"logo d-flex justify-content-center pt-4\">\n          <img src={ logoTrybewalletWhite } alt=\"logo\" />\n        </div>\n        <div className=\"info d-flex flex-column align-items-center\">\n          <p data-testid=\"email-field\" className=\"email-field mt-2 mb-1\">{email}</p>\n          <p className=\"expenses mb-3\">\n            <span\n              data-testid=\"total-field\"\n              className=\"total-field\"\n            >\n              {this.getTotalExpenses().toFixed(2)}\n            </span>\n            <span>{' '}</span>\n            <span\n              data-testid=\"header-currency-field\"\n              className=\"header-currency-field\"\n            >\n              BRL\n            </span>\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Fields extends Component {\n  render() {\n    const {\n      props: {\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        handleChange,\n        supportedCurrencies,\n      },\n    } = this;\n\n    return (\n      <div className=\"fields d-flex flex-column\">\n        <label htmlFor=\"value\" className=\"form-label\">\n          Qual o valor da despesa?\n          <input\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            id=\"value\"\n            className=\"form-control\"\n            value={ value }\n            onChange={ handleChange }\n          />\n        </label>\n        <label htmlFor=\"description\" className=\"form-label\">\n          Sobre o que se trata?\n          <input\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            className=\"form-control\"\n            value={ description }\n            onChange={ handleChange }\n          />\n        </label>\n        <label htmlFor=\"currency\" className=\"form-label\">\n          Moeda\n          <select\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            id=\"currency\"\n            className=\"form-select\"\n            onChange={ handleChange }\n            value={ currency }\n          >\n            {supportedCurrencies.map((c) => (\n              <option data-testid={ c } key={ `currency-${c}` } value={ c }>{c}</option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\" className=\"form-label\">\n          Qual o método de pagamento?\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            className=\"form-select\"\n            onChange={ handleChange }\n            value={ method }\n          >\n            <option value=\"defaultSelect\" disabled hidden>Método de pagamento</option>\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\" className=\"form-label\">\n          Qual a categoria da despesa?\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            className=\"form-select\"\n            onChange={ handleChange }\n            value={ tag }\n          >\n            <option value=\"defaultSelect\" disabled hidden>Categoria da despesa</option>\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Fields;\n\nFields.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  description: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  method: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  supportedCurrencies: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrenciesAct, addExpenseAct, saveExpenseAct } from '../../actions';\nimport Fields from './Fields';\n\nclass ExpenseForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'defaultSelect',\n      tag: 'defaultSelect',\n      settledFields: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getCurrencies = this.getCurrencies.bind(this);\n    this.setEditingFields = this.setEditingFields.bind(this);\n    this.handleAddExpense = this.handleAddExpense.bind(this);\n    this.handleSaveEdit = this.handleSaveEdit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCurrencies();\n  }\n\n  componentDidUpdate() {\n    const {\n      state: {\n        settledFields,\n      },\n      props: { editing },\n    } = this;\n\n    if (editing && !settledFields) this.setEditingFields();\n  }\n\n  getCurrencies() {\n    const { props: { fetchCurrencies } } = this;\n    fetchCurrencies();\n  }\n\n  setEditingFields() {\n    const {\n      props: { editingExpense: {\n        value, description, currency, method, tag,\n      } },\n    } = this;\n\n    const fields = { value, description, currency, method, tag };\n\n    this.setState({ settledFields: true, ...fields });\n  }\n\n  handleAddExpense() {\n    const { props: { fetchCurrencies } } = this;\n\n    fetchCurrencies().then(() => {\n      const {\n        state: { value, description, currency, method, tag },\n        props: { currencies, addExpense },\n      } = this;\n\n      const expenseObj = {\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates: currencies,\n      };\n\n      addExpense(expenseObj);\n\n      this.setState({ value: 0,\n        description: '',\n        currency: 'USD',\n        method: 'defaultSelect',\n        tag: 'defaultSelect',\n      });\n    });\n  }\n\n  handleSaveEdit() {\n    const {\n      state: { value, description, currency, method, tag },\n      props: { saveExpense, editingExpense },\n    } = this;\n\n    const newExpense = { ...editingExpense, value, description, currency, method, tag };\n    saveExpense(editingExpense.id, newExpense);\n\n    this.setState({ value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'defaultSelect',\n      tag: 'defaultSelect',\n      settledFields: false,\n    });\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const {\n      state: {\n        value,\n        description,\n        currency,\n        method,\n        tag,\n      },\n      props: { currencies, editing },\n    } = this;\n\n    const supportedCurrencies = Array.isArray(currencies)\n      ? currencies : Object.keys(currencies);\n\n    const fieldsObj = {\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      supportedCurrencies,\n      handleChange: this.handleChange,\n    };\n\n    return (\n      <div className=\"form-expense d-flex flex-column\">\n        <Fields\n          { ...fieldsObj }\n        />\n        {editing ? (\n          <button\n            type=\"button\"\n            onClick={ this.handleSaveEdit }\n            className=\"btn btn-info align-self-center mt-2\"\n            disabled={\n              value === 0\n              || description === ''\n              || method === 'defaultSelect'\n              || tag === 'defaultSelect'\n            }\n          >\n            Editar despesa\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={ this.handleAddExpense }\n            className=\"btn btn-success align-self-center mt-2\"\n            disabled={\n              value === 0\n              || description === ''\n              || method === 'defaultSelect'\n              || tag === 'defaultSelect'\n            }\n          >\n            Adicionar despesa\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  editing: state.wallet.editing,\n  editingExpense: state.wallet.editingExpense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCurrencies: () => dispatch(fetchCurrenciesAct()),\n  addExpense: (expense) => dispatch(addExpenseAct(expense)),\n  saveExpense: (id, expense) => dispatch(saveExpenseAct(id, expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n\nExpenseForm.propTypes = {\n  fetchCurrencies: PropTypes.func.isRequired,\n  addExpense: PropTypes.func.isRequired,\n  saveExpense: PropTypes.func.isRequired,\n  currencies: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]).isRequired,\n  editing: PropTypes.bool,\n  editingExpense: PropTypes.objectOf(PropTypes.any),\n};\n\nExpenseForm.defaultProps = {\n  editing: false,\n  editingExpense: {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BiEdit, BiX } from 'react-icons/bi';\nimport { editExpenseAct, removeExpenseAct } from '../actions';\n\nclass ExpensesTable extends Component {\n  render() {\n    const { props: { expenses, removeExpense, editExpense, editing } } = this;\n    return (\n      <div className=\"expenses-table\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr className=\"table-header\">\n              <th scope=\"col\" className=\"ps-2 pe-2 text-center\">#</th>\n              <th scope=\"col\">Valor</th>\n              <th scope=\"col\">Descrição</th>\n              <th scope=\"col\">Método de pagamento</th>\n              <th scope=\"col\">Tag</th>\n              <th scope=\"col\">Moeda</th>\n              <th scope=\"col\">Câmbio utilizado</th>\n              <th scope=\"col\">Valor convertido</th>\n              <th scope=\"col\">Moeda de conversão</th>\n              <th scope=\"col\">Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map((ex, i) => (\n              <tr key={ `expense-${ex.id}` }>\n                <th scope=\"row\" className=\"text-center\">{ `${i + 1}` }</th>\n                <td>{ex.value}</td>\n                <td>{ex.description}</td>\n                <td>{ex.method}</td>\n                <td>{ex.tag}</td>\n                <td>{ex.exchangeRates[ex.currency].name.split('/')[0]}</td>\n                <td>{parseFloat(ex.exchangeRates[ex.currency].ask).toFixed(2)}</td>\n                <td>\n                  {\n                    parseFloat(parseFloat(ex.value) * parseFloat(\n                      ex.exchangeRates[ex.currency].ask,\n                    )).toFixed(2)\n                  }\n                </td>\n                <td>Real</td>\n                <td\n                  className=\"\n                  cell-buttons d-flex align-items-center justify-content-center\"\n                >\n                  <button\n                    type=\"button\"\n                    data-testid=\"edit-btn\"\n                    onClick={ () => editExpense(ex.id) }\n                    disabled={ editing }\n                  >\n                    <BiEdit size={ 25 } />\n                  </button>\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-btn\"\n                    onClick={ () => removeExpense(ex.id) }\n                    disabled={ editing }\n                  >\n                    <BiX size={ 30 } />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  editing: state.wallet.editing,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpense: (id) => dispatch(removeExpenseAct(id)),\n  editExpense: (id) => dispatch(editExpenseAct(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.any).isRequired,\n  removeExpense: PropTypes.func.isRequired,\n  editExpense: PropTypes.func.isRequired,\n  editing: PropTypes.bool,\n};\n\nExpensesTable.defaultProps = {\n  editing: false,\n};\n","import React from 'react';\nimport { Routes } from './components';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Routes />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}